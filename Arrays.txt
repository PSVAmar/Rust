What Is an Array? 
An array is a homogenous sequence of elements. Being a compound type, it is used when the collection of values of the same type are to be stored in a single variable. In Rust, an array can only be of a fixed length. Like all other languages, each element in the array is assigned an index. By default, the first element is always at index 0.

Define an Array 
To define an array in Rust, we have to define the type and size of the array. To initialize an array, the array elements are enclosed in square brackets []. The following illustration explains the concept:

#[allow(unused_variables, unused_mut)]
fn main() {
   //define an array of size 4
   let arr:[i32;4] = [1, 2, 3, 4]; 
   // initialize an array of size 4 with 0
   let arr1 = [0 ; 4]; 
}

The array arr declaration on line 4 declares an array with elements 
1,2,3,4
.
The array arr1 declaration on line 6 implicitly determines the data type (integer) from the value 
0 and 4 is the size of the array. So, this becomes an array consisting of 
4 zeros.

How to Make an Array Mutable? 
Just like a variable becomes mutable by adding the mut keyword after let, the same goes for an array.


fn main() {
    //define a mutable array of size 4
    let mut arr:[i32;4] = [1, 2, 3, 4]; 
    println!("The value of array at index 1: {}", arr[1]);
    arr[1] = 9;
    println!("The value of array at index 1: {}", arr[1]);
}

output: 
The value of array at index 1: 2
The value of array at index 1: 9

Print the Array 
The whole array can be traversed using a loop or the debug trait.

The arrays elements can be traversed using loops, which will be discussed in chapter 7.

fn main() {
    //define an array of size 4
    let arr:[i32;4] = [1, 2, 3, 4]; 
    //Using debug trait
    println!("\nPrint using a debug trait");
    println!("Array: {:?}", arr);
}

Print using a debug trait
Array: [1, 2, 3, 4]



Get the Length of the Array 
To access the length of the array, use the built-in function len.



fn main() {
    //define an array of size 4
    let arr:[i32;4] = [1, 2, 3, 4]; 
    // print the length of array
    println!("Length of array: {}", arr.len());
}
